package com.company.professor;

import com.company.professor.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "nature_battle_style_preferences".
 */
public class NatureBattleStylePreferences {

    private long NatureId;
    private long MoveBattleStyleId;
    private long LowHpPreference;
    private long HighHpPreference;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient NatureBattleStylePreferencesDao myDao;

    private Natures Natures;
    private Long Natures__resolvedKey;

    private MoveBattleStyles MoveBattleStyles;
    private Long MoveBattleStyles__resolvedKey;


    public NatureBattleStylePreferences() {
    }

    public NatureBattleStylePreferences(long NatureId) {
        this.NatureId = NatureId;
    }

    public NatureBattleStylePreferences(long NatureId, long MoveBattleStyleId, long LowHpPreference, long HighHpPreference) {
        this.NatureId = NatureId;
        this.MoveBattleStyleId = MoveBattleStyleId;
        this.LowHpPreference = LowHpPreference;
        this.HighHpPreference = HighHpPreference;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getNatureBattleStylePreferencesDao() : null;
    }

    public long getNatureId() {
        return NatureId;
    }

    public void setNatureId(long NatureId) {
        this.NatureId = NatureId;
    }

    public long getMoveBattleStyleId() {
        return MoveBattleStyleId;
    }

    public void setMoveBattleStyleId(long MoveBattleStyleId) {
        this.MoveBattleStyleId = MoveBattleStyleId;
    }

    public long getLowHpPreference() {
        return LowHpPreference;
    }

    public void setLowHpPreference(long LowHpPreference) {
        this.LowHpPreference = LowHpPreference;
    }

    public long getHighHpPreference() {
        return HighHpPreference;
    }

    public void setHighHpPreference(long HighHpPreference) {
        this.HighHpPreference = HighHpPreference;
    }

    /** To-one relationship, resolved on first access. */
    public Natures getNatures() {
        long __key = this.NatureId;
        if (Natures__resolvedKey == null || !Natures__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            NaturesDao targetDao = daoSession.getNaturesDao();
            Natures NaturesNew = targetDao.load(__key);
            synchronized (this) {
                Natures = NaturesNew;
            	Natures__resolvedKey = __key;
            }
        }
        return Natures;
    }

    public void setNatures(Natures Natures) {
        if (Natures == null) {
            throw new DaoException("To-one property 'NatureId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.Natures = Natures;
            NatureId = Natures.getId();
            Natures__resolvedKey = NatureId;
        }
    }

    /** To-one relationship, resolved on first access. */
    public MoveBattleStyles getMoveBattleStyles() {
        long __key = this.MoveBattleStyleId;
        if (MoveBattleStyles__resolvedKey == null || !MoveBattleStyles__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            MoveBattleStylesDao targetDao = daoSession.getMoveBattleStylesDao();
            MoveBattleStyles MoveBattleStylesNew = targetDao.load(__key);
            synchronized (this) {
                MoveBattleStyles = MoveBattleStylesNew;
            	MoveBattleStyles__resolvedKey = __key;
            }
        }
        return MoveBattleStyles;
    }

    public void setMoveBattleStyles(MoveBattleStyles MoveBattleStyles) {
        if (MoveBattleStyles == null) {
            throw new DaoException("To-one property 'MoveBattleStyleId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.MoveBattleStyles = MoveBattleStyles;
            MoveBattleStyleId = MoveBattleStyles.getId();
            MoveBattleStyles__resolvedKey = MoveBattleStyleId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
