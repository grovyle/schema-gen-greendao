package com.company.professor;

import com.company.professor.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "item_fling_effect_prose".
 */
public class ItemFlingEffectProse {

    private long ItemFlingEffectId;
    private long LocalLanguageId;
    /** Not-null value. */
    private String Effect;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ItemFlingEffectProseDao myDao;

    private ItemFlingEffects ItemFlingEffects;
    private Long ItemFlingEffects__resolvedKey;

    private Languages Languages;
    private Long Languages__resolvedKey;


    public ItemFlingEffectProse() {
    }

    public ItemFlingEffectProse(long ItemFlingEffectId) {
        this.ItemFlingEffectId = ItemFlingEffectId;
    }

    public ItemFlingEffectProse(long ItemFlingEffectId, long LocalLanguageId, String Effect) {
        this.ItemFlingEffectId = ItemFlingEffectId;
        this.LocalLanguageId = LocalLanguageId;
        this.Effect = Effect;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getItemFlingEffectProseDao() : null;
    }

    public long getItemFlingEffectId() {
        return ItemFlingEffectId;
    }

    public void setItemFlingEffectId(long ItemFlingEffectId) {
        this.ItemFlingEffectId = ItemFlingEffectId;
    }

    public long getLocalLanguageId() {
        return LocalLanguageId;
    }

    public void setLocalLanguageId(long LocalLanguageId) {
        this.LocalLanguageId = LocalLanguageId;
    }

    /** Not-null value. */
    public String getEffect() {
        return Effect;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setEffect(String Effect) {
        this.Effect = Effect;
    }

    /** To-one relationship, resolved on first access. */
    public ItemFlingEffects getItemFlingEffects() {
        long __key = this.ItemFlingEffectId;
        if (ItemFlingEffects__resolvedKey == null || !ItemFlingEffects__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            ItemFlingEffectsDao targetDao = daoSession.getItemFlingEffectsDao();
            ItemFlingEffects ItemFlingEffectsNew = targetDao.load(__key);
            synchronized (this) {
                ItemFlingEffects = ItemFlingEffectsNew;
            	ItemFlingEffects__resolvedKey = __key;
            }
        }
        return ItemFlingEffects;
    }

    public void setItemFlingEffects(ItemFlingEffects ItemFlingEffects) {
        if (ItemFlingEffects == null) {
            throw new DaoException("To-one property 'ItemFlingEffectId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.ItemFlingEffects = ItemFlingEffects;
            ItemFlingEffectId = ItemFlingEffects.getId();
            ItemFlingEffects__resolvedKey = ItemFlingEffectId;
        }
    }

    /** To-one relationship, resolved on first access. */
    public Languages getLanguages() {
        long __key = this.LocalLanguageId;
        if (Languages__resolvedKey == null || !Languages__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            LanguagesDao targetDao = daoSession.getLanguagesDao();
            Languages LanguagesNew = targetDao.load(__key);
            synchronized (this) {
                Languages = LanguagesNew;
            	Languages__resolvedKey = __key;
            }
        }
        return Languages;
    }

    public void setLanguages(Languages Languages) {
        if (Languages == null) {
            throw new DaoException("To-one property 'LocalLanguageId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.Languages = Languages;
            LocalLanguageId = Languages.getId();
            Languages__resolvedKey = LocalLanguageId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
