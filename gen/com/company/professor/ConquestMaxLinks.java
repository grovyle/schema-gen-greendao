package com.company.professor;

import com.company.professor.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "conquest_max_links".
 */
public class ConquestMaxLinks {

    private long WarriorRankId;
    private long PokemonSpeciesId;
    private long MaxLink;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ConquestMaxLinksDao myDao;

    private ConquestWarriorRanks ConquestWarriorRanks;
    private Long ConquestWarriorRanks__resolvedKey;

    private PokemonSpecies PokemonSpecies;
    private Long PokemonSpecies__resolvedKey;


    public ConquestMaxLinks() {
    }

    public ConquestMaxLinks(long WarriorRankId) {
        this.WarriorRankId = WarriorRankId;
    }

    public ConquestMaxLinks(long WarriorRankId, long PokemonSpeciesId, long MaxLink) {
        this.WarriorRankId = WarriorRankId;
        this.PokemonSpeciesId = PokemonSpeciesId;
        this.MaxLink = MaxLink;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getConquestMaxLinksDao() : null;
    }

    public long getWarriorRankId() {
        return WarriorRankId;
    }

    public void setWarriorRankId(long WarriorRankId) {
        this.WarriorRankId = WarriorRankId;
    }

    public long getPokemonSpeciesId() {
        return PokemonSpeciesId;
    }

    public void setPokemonSpeciesId(long PokemonSpeciesId) {
        this.PokemonSpeciesId = PokemonSpeciesId;
    }

    public long getMaxLink() {
        return MaxLink;
    }

    public void setMaxLink(long MaxLink) {
        this.MaxLink = MaxLink;
    }

    /** To-one relationship, resolved on first access. */
    public ConquestWarriorRanks getConquestWarriorRanks() {
        long __key = this.WarriorRankId;
        if (ConquestWarriorRanks__resolvedKey == null || !ConquestWarriorRanks__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            ConquestWarriorRanksDao targetDao = daoSession.getConquestWarriorRanksDao();
            ConquestWarriorRanks ConquestWarriorRanksNew = targetDao.load(__key);
            synchronized (this) {
                ConquestWarriorRanks = ConquestWarriorRanksNew;
            	ConquestWarriorRanks__resolvedKey = __key;
            }
        }
        return ConquestWarriorRanks;
    }

    public void setConquestWarriorRanks(ConquestWarriorRanks ConquestWarriorRanks) {
        if (ConquestWarriorRanks == null) {
            throw new DaoException("To-one property 'WarriorRankId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.ConquestWarriorRanks = ConquestWarriorRanks;
            WarriorRankId = ConquestWarriorRanks.getId();
            ConquestWarriorRanks__resolvedKey = WarriorRankId;
        }
    }

    /** To-one relationship, resolved on first access. */
    public PokemonSpecies getPokemonSpecies() {
        long __key = this.PokemonSpeciesId;
        if (PokemonSpecies__resolvedKey == null || !PokemonSpecies__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            PokemonSpeciesDao targetDao = daoSession.getPokemonSpeciesDao();
            PokemonSpecies PokemonSpeciesNew = targetDao.load(__key);
            synchronized (this) {
                PokemonSpecies = PokemonSpeciesNew;
            	PokemonSpecies__resolvedKey = __key;
            }
        }
        return PokemonSpecies;
    }

    public void setPokemonSpecies(PokemonSpecies PokemonSpecies) {
        if (PokemonSpecies == null) {
            throw new DaoException("To-one property 'PokemonSpeciesId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.PokemonSpecies = PokemonSpecies;
            PokemonSpeciesId = PokemonSpecies.getId();
            PokemonSpecies__resolvedKey = PokemonSpeciesId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
